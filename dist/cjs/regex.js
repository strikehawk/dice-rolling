"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.test = exports.captureRegExp = exports.validationRegExp = exports.captureRegexPattern = exports.validationRegexPattern = exports.CaptureGroups = void 0;
const roll_registry_1 = require("./parts/roll-registry");
var CaptureGroups;
(function (CaptureGroups) {
    CaptureGroups["OPERATOR"] = "operator";
})(CaptureGroups = exports.CaptureGroups || (exports.CaptureGroups = {}));
const OPERATORS = "[\\+\\-\\*\\/\\%]";
const OPERATORS_CAPTURE = `(?<${CaptureGroups.OPERATOR}>${OPERATORS})`;
const ELEMENT_VALIDATION = roll_registry_1.diceExpressionClasses.map(o => o.REGEX_PATTERN).join("|");
const ELEMENT_CAPTURE = roll_registry_1.diceExpressionClasses.map(o => o.CAPTURE_PATTERN).join("|");
/**
 * NOTE: All these patterns accept strings starting with '/', '*' or '%', which are binary operators. When these cases happen, assume 0 for the missing operand.
 */
function getValidationRegexPattern() {
    return `(${OPERATORS}?(?:${ELEMENT_VALIDATION}))`;
}
function getCaptureRegexPattern() {
    return `${OPERATORS_CAPTURE}?(?:${ELEMENT_CAPTURE})`;
}
exports.validationRegexPattern = getValidationRegexPattern();
exports.captureRegexPattern = getCaptureRegexPattern();
exports.validationRegExp = new RegExp(exports.validationRegexPattern, "gm");
exports.captureRegExp = new RegExp(exports.captureRegexPattern, "gm");
exports.test = "423";
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVnZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9saWIvcmVnZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEseURBQThEO0FBRTlELElBQVksYUFFWDtBQUZELFdBQVksYUFBYTtJQUNyQixzQ0FBcUIsQ0FBQTtBQUN6QixDQUFDLEVBRlcsYUFBYSxHQUFiLHFCQUFhLEtBQWIscUJBQWEsUUFFeEI7QUFFRCxNQUFNLFNBQVMsR0FBVyxtQkFBbUIsQ0FBQztBQUM5QyxNQUFNLGlCQUFpQixHQUFXLE1BQU0sYUFBYSxDQUFDLFFBQVEsSUFBSSxTQUFTLEdBQUcsQ0FBQztBQUUvRSxNQUFNLGtCQUFrQixHQUFHLHFDQUFxQixDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxhQUFhLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDckYsTUFBTSxlQUFlLEdBQUcscUNBQXFCLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLGVBQWUsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUVwRjs7R0FFRztBQUVILFNBQVMseUJBQXlCO0lBQzlCLE9BQU8sSUFBSSxTQUFTLE9BQU8sa0JBQWtCLElBQUksQ0FBQztBQUN0RCxDQUFDO0FBRUQsU0FBUyxzQkFBc0I7SUFDM0IsT0FBTyxHQUFHLGlCQUFpQixPQUFPLGVBQWUsR0FBRyxDQUFDO0FBQ3pELENBQUM7QUFFWSxRQUFBLHNCQUFzQixHQUFXLHlCQUF5QixFQUFFLENBQUM7QUFDN0QsUUFBQSxtQkFBbUIsR0FBVyxzQkFBc0IsRUFBRSxDQUFDO0FBRXZELFFBQUEsZ0JBQWdCLEdBQUcsSUFBSSxNQUFNLENBQUMsOEJBQXNCLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDNUQsUUFBQSxhQUFhLEdBQUcsSUFBSSxNQUFNLENBQUMsMkJBQW1CLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFFdEQsUUFBQSxJQUFJLEdBQUcsS0FBSyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZGljZUV4cHJlc3Npb25DbGFzc2VzIH0gZnJvbSBcIi4vcGFydHMvcm9sbC1yZWdpc3RyeVwiO1xyXG5cclxuZXhwb3J0IGVudW0gQ2FwdHVyZUdyb3VwcyB7XHJcbiAgICBPUEVSQVRPUiA9IFwib3BlcmF0b3JcIlxyXG59XHJcblxyXG5jb25zdCBPUEVSQVRPUlM6IHN0cmluZyA9IFwiW1xcXFwrXFxcXC1cXFxcKlxcXFwvXFxcXCVdXCI7XHJcbmNvbnN0IE9QRVJBVE9SU19DQVBUVVJFOiBzdHJpbmcgPSBgKD88JHtDYXB0dXJlR3JvdXBzLk9QRVJBVE9SfT4ke09QRVJBVE9SU30pYDtcclxuXHJcbmNvbnN0IEVMRU1FTlRfVkFMSURBVElPTiA9IGRpY2VFeHByZXNzaW9uQ2xhc3Nlcy5tYXAobyA9PiBvLlJFR0VYX1BBVFRFUk4pLmpvaW4oXCJ8XCIpO1xyXG5jb25zdCBFTEVNRU5UX0NBUFRVUkUgPSBkaWNlRXhwcmVzc2lvbkNsYXNzZXMubWFwKG8gPT4gby5DQVBUVVJFX1BBVFRFUk4pLmpvaW4oXCJ8XCIpO1xyXG5cclxuLyoqXHJcbiAqIE5PVEU6IEFsbCB0aGVzZSBwYXR0ZXJucyBhY2NlcHQgc3RyaW5ncyBzdGFydGluZyB3aXRoICcvJywgJyonIG9yICclJywgd2hpY2ggYXJlIGJpbmFyeSBvcGVyYXRvcnMuIFdoZW4gdGhlc2UgY2FzZXMgaGFwcGVuLCBhc3N1bWUgMCBmb3IgdGhlIG1pc3Npbmcgb3BlcmFuZC5cclxuICovXHJcblxyXG5mdW5jdGlvbiBnZXRWYWxpZGF0aW9uUmVnZXhQYXR0ZXJuKCk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gYCgke09QRVJBVE9SU30/KD86JHtFTEVNRU5UX1ZBTElEQVRJT059KSlgO1xyXG59XHJcblxyXG5mdW5jdGlvbiBnZXRDYXB0dXJlUmVnZXhQYXR0ZXJuKCk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gYCR7T1BFUkFUT1JTX0NBUFRVUkV9Pyg/OiR7RUxFTUVOVF9DQVBUVVJFfSlgO1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgdmFsaWRhdGlvblJlZ2V4UGF0dGVybjogc3RyaW5nID0gZ2V0VmFsaWRhdGlvblJlZ2V4UGF0dGVybigpO1xyXG5leHBvcnQgY29uc3QgY2FwdHVyZVJlZ2V4UGF0dGVybjogc3RyaW5nID0gZ2V0Q2FwdHVyZVJlZ2V4UGF0dGVybigpO1xyXG5cclxuZXhwb3J0IGNvbnN0IHZhbGlkYXRpb25SZWdFeHAgPSBuZXcgUmVnRXhwKHZhbGlkYXRpb25SZWdleFBhdHRlcm4sIFwiZ21cIik7XHJcbmV4cG9ydCBjb25zdCBjYXB0dXJlUmVnRXhwID0gbmV3IFJlZ0V4cChjYXB0dXJlUmVnZXhQYXR0ZXJuLCBcImdtXCIpO1xyXG5cclxuZXhwb3J0IGNvbnN0IHRlc3QgPSBcIjQyM1wiOyJdfQ==