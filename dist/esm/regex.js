import { diceExpressionClasses } from "./parts/roll-registry";
export var CaptureGroups;
(function (CaptureGroups) {
    CaptureGroups["OPERATOR"] = "operator";
})(CaptureGroups || (CaptureGroups = {}));
const OPERATORS = "[\\+\\-\\*\\/\\%]";
const OPERATORS_CAPTURE = `(?<${CaptureGroups.OPERATOR}>${OPERATORS})`;
const ELEMENT_VALIDATION = diceExpressionClasses.map(o => o.REGEX_PATTERN).join("|");
const ELEMENT_CAPTURE = diceExpressionClasses.map(o => o.CAPTURE_PATTERN).join("|");
/**
 * NOTE: All these patterns accept strings starting with '/', '*' or '%', which are binary operators. When these cases happen, assume 0 for the missing operand.
 */
function getValidationRegexPattern() {
    return `(${OPERATORS}?(?:${ELEMENT_VALIDATION}))`;
}
function getCaptureRegexPattern() {
    return `${OPERATORS_CAPTURE}?(?:${ELEMENT_CAPTURE})`;
}
export const validationRegexPattern = getValidationRegexPattern();
export const captureRegexPattern = getCaptureRegexPattern();
export const validationRegExp = new RegExp(validationRegexPattern, "gm");
export const captureRegExp = new RegExp(captureRegexPattern, "gm");
export const test = "423";
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVnZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9saWIvcmVnZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFFOUQsTUFBTSxDQUFOLElBQVksYUFFWDtBQUZELFdBQVksYUFBYTtJQUNyQixzQ0FBcUIsQ0FBQTtBQUN6QixDQUFDLEVBRlcsYUFBYSxLQUFiLGFBQWEsUUFFeEI7QUFFRCxNQUFNLFNBQVMsR0FBVyxtQkFBbUIsQ0FBQztBQUM5QyxNQUFNLGlCQUFpQixHQUFXLE1BQU0sYUFBYSxDQUFDLFFBQVEsSUFBSSxTQUFTLEdBQUcsQ0FBQztBQUUvRSxNQUFNLGtCQUFrQixHQUFHLHFCQUFxQixDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxhQUFhLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDckYsTUFBTSxlQUFlLEdBQUcscUJBQXFCLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLGVBQWUsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUVwRjs7R0FFRztBQUVILFNBQVMseUJBQXlCO0lBQzlCLE9BQU8sSUFBSSxTQUFTLE9BQU8sa0JBQWtCLElBQUksQ0FBQztBQUN0RCxDQUFDO0FBRUQsU0FBUyxzQkFBc0I7SUFDM0IsT0FBTyxHQUFHLGlCQUFpQixPQUFPLGVBQWUsR0FBRyxDQUFDO0FBQ3pELENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxzQkFBc0IsR0FBVyx5QkFBeUIsRUFBRSxDQUFDO0FBQzFFLE1BQU0sQ0FBQyxNQUFNLG1CQUFtQixHQUFXLHNCQUFzQixFQUFFLENBQUM7QUFFcEUsTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLEdBQUcsSUFBSSxNQUFNLENBQUMsc0JBQXNCLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDekUsTUFBTSxDQUFDLE1BQU0sYUFBYSxHQUFHLElBQUksTUFBTSxDQUFDLG1CQUFtQixFQUFFLElBQUksQ0FBQyxDQUFDO0FBRW5FLE1BQU0sQ0FBQyxNQUFNLElBQUksR0FBRyxLQUFLLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkaWNlRXhwcmVzc2lvbkNsYXNzZXMgfSBmcm9tIFwiLi9wYXJ0cy9yb2xsLXJlZ2lzdHJ5XCI7XHJcblxyXG5leHBvcnQgZW51bSBDYXB0dXJlR3JvdXBzIHtcclxuICAgIE9QRVJBVE9SID0gXCJvcGVyYXRvclwiXHJcbn1cclxuXHJcbmNvbnN0IE9QRVJBVE9SUzogc3RyaW5nID0gXCJbXFxcXCtcXFxcLVxcXFwqXFxcXC9cXFxcJV1cIjtcclxuY29uc3QgT1BFUkFUT1JTX0NBUFRVUkU6IHN0cmluZyA9IGAoPzwke0NhcHR1cmVHcm91cHMuT1BFUkFUT1J9PiR7T1BFUkFUT1JTfSlgO1xyXG5cclxuY29uc3QgRUxFTUVOVF9WQUxJREFUSU9OID0gZGljZUV4cHJlc3Npb25DbGFzc2VzLm1hcChvID0+IG8uUkVHRVhfUEFUVEVSTikuam9pbihcInxcIik7XHJcbmNvbnN0IEVMRU1FTlRfQ0FQVFVSRSA9IGRpY2VFeHByZXNzaW9uQ2xhc3Nlcy5tYXAobyA9PiBvLkNBUFRVUkVfUEFUVEVSTikuam9pbihcInxcIik7XHJcblxyXG4vKipcclxuICogTk9URTogQWxsIHRoZXNlIHBhdHRlcm5zIGFjY2VwdCBzdHJpbmdzIHN0YXJ0aW5nIHdpdGggJy8nLCAnKicgb3IgJyUnLCB3aGljaCBhcmUgYmluYXJ5IG9wZXJhdG9ycy4gV2hlbiB0aGVzZSBjYXNlcyBoYXBwZW4sIGFzc3VtZSAwIGZvciB0aGUgbWlzc2luZyBvcGVyYW5kLlxyXG4gKi9cclxuXHJcbmZ1bmN0aW9uIGdldFZhbGlkYXRpb25SZWdleFBhdHRlcm4oKTogc3RyaW5nIHtcclxuICAgIHJldHVybiBgKCR7T1BFUkFUT1JTfT8oPzoke0VMRU1FTlRfVkFMSURBVElPTn0pKWA7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGdldENhcHR1cmVSZWdleFBhdHRlcm4oKTogc3RyaW5nIHtcclxuICAgIHJldHVybiBgJHtPUEVSQVRPUlNfQ0FQVFVSRX0/KD86JHtFTEVNRU5UX0NBUFRVUkV9KWA7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCB2YWxpZGF0aW9uUmVnZXhQYXR0ZXJuOiBzdHJpbmcgPSBnZXRWYWxpZGF0aW9uUmVnZXhQYXR0ZXJuKCk7XHJcbmV4cG9ydCBjb25zdCBjYXB0dXJlUmVnZXhQYXR0ZXJuOiBzdHJpbmcgPSBnZXRDYXB0dXJlUmVnZXhQYXR0ZXJuKCk7XHJcblxyXG5leHBvcnQgY29uc3QgdmFsaWRhdGlvblJlZ0V4cCA9IG5ldyBSZWdFeHAodmFsaWRhdGlvblJlZ2V4UGF0dGVybiwgXCJnbVwiKTtcclxuZXhwb3J0IGNvbnN0IGNhcHR1cmVSZWdFeHAgPSBuZXcgUmVnRXhwKGNhcHR1cmVSZWdleFBhdHRlcm4sIFwiZ21cIik7XHJcblxyXG5leHBvcnQgY29uc3QgdGVzdCA9IFwiNDIzXCI7Il19